openapi: "3.0.0"
info:
  version: "1.0"
  title: Easy Server
  description: Easy Server
servers:
  - url: http://localhost:777
tags:
  - name: greeting
  - name: log in / out
  - name: easy item
paths:
  /:
    get:
      summary: Приветствие
      operationId: greeting
      tags:
        - greeting
      parameters:
        - name: user
          in: query
          description: Имя пользователя
          required: false
          schema:
            type: string
            example: John
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: Hello, John!
  /api/register:
    post:
      summary: Регистрация в системе
      operationId: register
      tags:
        - log in / out
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/newUser'
      responses:
        '204':
          description: Пользователь создан успешно
        '400':
          description: Пользователь с данным именем уже существует или некорректное имя
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/violations'

  /api/login:
    post:
      summary: Запрос на вход в систему
      operationId: login
      tags:
        - log in / out
      parameters:
        - name: name
          in: query
          description: Имя пользователя
          required: true
          schema:
            type: string
            example: John
        - name: pwd
          in: query
          description: Пароль пользователя
          required: true
          schema:
            type: string
            example: johnpwd
      responses:
        '200':
          description: Вход выполнен
          headers:
            X-AUTH:
              description: Токен аутентификации пользователя
              schema:
                type: string
                example:
        '400':
          description: Имя пользователя или пароль неверные
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/violations'
  /api/easy_items:
    get:
      security:
        - header: [ X-AUTH ]
      summary: Возвращает список 'easy item' пользователя
      operationId: getArrayEasyItem
      tags:
        - easy item
      parameters:
        - name: limit
          in: query
          description: Лимит возвращаемых 'easy item'
          required: false
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        '200':
          description: Список 'easy item'
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/getEasyItem'
        '400':
          description: Запрос содержит ошибки
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/violations'
        '401':
          description: Пользователь не авторизован
        '403':
          description: Недостаточно прав пользователя
    post:
      security:
        - header: [ X-AUTH ]
      summary: Создание 'easy item'
      operationId: postEasyItem
      tags:
        - easy item
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/postEasyItem'
      responses:
        '201':
          description: Создан 'easy item'
          headers:
            Location:
              description: URI созданного easy item'
              schema:
                type: string
                example: [server]/api/easy_items/15
        '400':
          description: Запрос содержит ошибки
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/violations'
        '401':
          description: Пользователь не авторизован
        '403':
          description: Недостаточно прав пользователя
  /api/easy_items/{easyItemId}:
    get:
      security:
        - header: [ X-AUTH ]
      summary: Получение 'easy item' по идентификатору
      operationId: getEasyItem
      tags:
        - easy item
      parameters:
        - name: easyItemId
          in: path
          description: Идентификатор 'easy item'
          schema:
            type: integer
            format: int32
            example: 15
      responses:
        '200':
          description: Получен 'easy item'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/getEasyItem'
        '400':
          description: Запрос содержит ошибки
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/violations'
        '401':
          description: Пользователь не авторизован
        '403':
          description: Недостаточно прав пользователя
    delete:
      security:
        - header: [ X-AUTH ]
      summary: Удаление 'easy item' по идентификатору
      operationId: deleteEasyItem
      tags:
        - easy item
      parameters:
        - name: easyItemId
          in: path
          description: Идентификатор 'easy item'
          schema:
            type: integer
            format: int32
            example: 15
      responses: 
        '204':
          description: Удален 'easy item'
        '400':
          description: Запрос содержит ошибки
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/violations'
        '401':
          description: Пользователь не авторизован
        '403':
          description: Недостаточно прав пользователя

components:
  schemas:
    newUser:
      properties:
        name:
          description: Имя пользователя
          type: string
          example: John
        password:
          description: Пароль пользователя
          type: string
          example: jghf73f
    getEasyItem:
      properties:
        id:
          description: Идентификатор 'easy item'
          type: integer
          format: int64
          example: 15
        name:
          description: Наименование 'easy item'
          type: string
          example: Предмет
    postEasyItem:
      properties:
        name:
          description: Наименование 'easy item'
          type: string
          example: Предмет
    violations:
      properties:
        violations:
          description: Список нарушений
          type: object
          properties:
            field1:
              type: array
              example:
                - violation 1
                - violation 2
